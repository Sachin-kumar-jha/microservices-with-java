spring.application.name=order-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=Sachin(123)Jha

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

server.port=0

# Force hostname
eureka.instance.hostname=localhost

# Make Eureka use hostname instead of machine name
eureka.instance.prefer-ip-address=false

# Unique instance id (so multiple instances donâ€™t clash)
eureka.instance.instance-id=${spring.application.name}:${server.port}
# Eureka server URL
eureka.client.serviceUrl.defaultZone=http://eureka:eurekapassword@localhost:8761/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilence4J properties

# ================================
# Resilience4j Circuit Breaker
# ================================
resilience4j.circuitbreaker.instances.inventory-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory-service.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory-service.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.inventory-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory-service.waitDurationInOpenState=15s
resilience4j.circuitbreaker.instances.inventory-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory-service.automaticTransitionFromOpenToHalfOpenEnabled=true


# ================================
# Resilience4j Rate Limiter
# ================================
#resilience4j.ratelimiter.instances.myService.limitForPeriod=10
#resilience4j.ratelimiter.instances.myService.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.myService.timeoutDuration=0
#
## ================================
## Resilience4j Bulkhead (concurrent call limit)
## ================================
#resilience4j.bulkhead.instances.myService.maxConcurrentCalls=10
#resilience4j.bulkhead.instances.myService.maxWaitDuration=0
#
## ================================
## Resilience4j Time Limiter
## ================================
resilience4j.timelimiter.instances.inventory-service.timeout-duration=15s

# ================================
# Resilience4j Retry
# ================================
resilience4j.retry.instances.inventory-service.max-attempts=3
resilience4j.retry.instances.inventory-service.wait-duration=10s
#resilience4j.retry.instances.myService.enableExponentialBackoff=true
#resilience4j.retry.instances.myService.exponentialBackoffMultiplier=2

# === Enable tracing ===
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# === Export traces to Zipkin ===
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# === Add traceId/spanId in logs ===
logging.pattern.level=%5p [traceId=%X{traceId:-}, spanId=%X{spanId:-}]



